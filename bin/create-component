#!/bin/sh

# Create a .h/.cpp pair of boilerplate under src/ for a specified component,
# e.g.
#
#     $ bin/create-component foo_bar
#
# creates
#
#     src/foo_bar.h
#     src/foo_bar.cpp
#     include/datadog/foo_bar.h  ->  ../../src/foo_bar.h
#

create_component() {
    component=$1

    if [ "$component" = "" ]; then
        >&2 echo 'usage: bin/create-component COMPONENT_NAME'
        exit 1
    fi

    bin_dir=$(dirname "$0")
    cd "$bin_dir"/..

    >"src/$component.h" cat <<END_HEADER
#pragma once

namespace datadog {
namespace tracing {

// TODO

}  // namespace tracing
}  // namespace datadog
END_HEADER

>"src/$component.cpp" cat <<END_SOURCE
#include "$component.h"

namespace datadog {
namespace tracing {

// TODO

}  // namespace tracing
}  // namespace datadog
END_SOURCE
}

for arg in "$@"; do
    create_component "$arg"
done

"$bin_dir"/update-includes
