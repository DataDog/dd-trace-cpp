name: 'Fuzzer'
description: 'Run Fuzzer'
inputs:
  binary:  # id of input
    description: 'Fuzzer binary to execute'
    required: true
  duration_seconds:
    description: 'How long the fuzzer should run in seconds'
    required: true
runs:
  using: "composite"
  steps:
    - name: Check inputs
      shell: bash
      run: |
        if [ ! -f "${{ inputs.binary }}" ]; then
          echo "Binary \"${{ inputs.binary }}\" not found"
          exit 1
        fi

    - name: Prepare
      id: prepare
      shell: bash
      run: |
        echo "cache-key=${{ runner.os }}-${{ hashFiles(inputs.binary) }}" >> $GITHUB_OUTPUT
        echo "corpus-dir=corpus-${{ hashFiles(inputs.binary) }}" >> $GITHUB_OUTPUT

    - uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      id: cache
      with:
        path: ${{ steps.prepare.outputs.corpus-dir }}
        key: ${{ steps.prepare.outputs.cache-key }}

    - name: Initialize corpus
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: mkdir -p ${{ steps.prepare.outputs.corpus-dir }}

    - name: Run
      run: ${{ inputs.binary }} -max_total_time=${{ inputs.duration_seconds }} ${{ steps.prepare.outputs.corpus-dir }}
      shell: bash

    - uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ${{ steps.prepare.outputs.corpus-dir }}
        key: ${{ steps.prepare.outputs.cache-key }}
