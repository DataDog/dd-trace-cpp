version: 2.1

executors:
  docker-amd64:
    docker:
      - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: xlarge
  docker-arm64:
    docker:
      - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: arm.xlarge

jobs:
  format:
    docker:
    - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: small
    steps:
    - checkout
    - run: bin/check-format

  shellcheck:
    docker:
    - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: small
    steps:
    - checkout
    - run: find bin/ -executable -type f -print0 | xargs -0 shellcheck

  build-bazel:
    parameters:
      toolchain:
        type: string
      arch:
        type: string
    executor: docker-<< parameters.arch >>
    environment:
      MAKE_JOB_COUNT: 8
    steps:
    - checkout
    - run: bin/with-toolchain << parameters.toolchain >> bazelisk build --jobs $MAKE_JOB_COUNT dd_trace_cpp

  test-cmake:
    parameters:
      toolchain:
        type: string
      sanitize:
        type: string
      arch:
        type: string
    executor: docker-<< parameters.arch >>
    environment:
      MAKE_JOB_COUNT: 8
      # See <https://github.com/llvm/llvm-project/issues/59432>.
      ASAN_OPTIONS: alloc_dealloc_mismatch=0
    steps:
    - checkout
    - run: bin/with-toolchain << parameters.toolchain >> cmake . -B .build -DBUILD_TESTING=1 -DSANITIZE=<< parameters.sanitize >>
    - run: cmake --build .build -j ${MAKE_JOB_COUNT} -v
    - run: cd .build && test/tests

  coverage:
    docker:
    - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: xlarge
    environment:
      MAKE_JOB_COUNT: 8
    steps:
    - checkout
    - run: bin/test --coverage --verbose
    - add_ssh_keys:
        fingerprints:
        - "d3:8f:a8:6e:b6:ef:37:65:1a:dc:2b:88:3b:ff:50:f4"
    - run: bin/publish-coverage

workflows:
  pull-request:
    jobs:
    - format
    - shellcheck
    - test-cmake:
        matrix:
          parameters:
            toolchain: ["gnu", "llvm"]
            sanitize: ["on", "off"]
            arch: ["amd64", "arm64"]
    - build-bazel:
        matrix:
          parameters:
            arch: ["amd64", "arm64"]
            toolchain: ["gnu", "llvm"]
    - coverage
