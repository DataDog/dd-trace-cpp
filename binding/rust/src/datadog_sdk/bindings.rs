#![allow(warnings)]

/* automatically generated by rust-bindgen 0.69.4 */

pub const _LIBCPP_ABI_VERSION: u32 = 1;
pub const _LIBCPP_ENABLE_ASSERTIONS_DEFAULT: u32 = 0;
pub const _LIBCPP_VERSION: u32 = 15006;
pub const _LIBCPP_STD_VER: u32 = 11;
pub const _LIBCPP_OBJECT_FORMAT_MACHO: u32 = 1;
pub const _LIBCPP_LOCALE__L_EXTENSIONS: u32 = 1;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct str_view {
    pub buf: *const ::std::os::raw::c_char,
    pub len: usize,
}
#[test]
fn bindgen_test_layout_str_view() {
    const UNINIT: ::std::mem::MaybeUninit<str_view> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<str_view>(),
        16usize,
        concat!("Size of: ", stringify!(str_view))
    );
    assert_eq!(
        ::std::mem::align_of::<str_view>(),
        8usize,
        concat!("Alignment of ", stringify!(str_view))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).buf) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(str_view),
            "::",
            stringify!(buf)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).len) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(str_view),
            "::",
            stringify!(len)
        )
    );
}
pub type datadog_sdk_context_read_callback = ::std::option::Option<
    unsafe extern "C" fn(reader_ctx: *mut ::std::os::raw::c_void, key: str_view) -> str_view,
>;
pub type datadog_sdk_context_write_callback = ::std::option::Option<
    unsafe extern "C" fn(writer_ctx: *mut ::std::os::raw::c_void, key: str_view, value: str_view),
>;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_SERVICE_NAME: datadog_sdk_tracer_option = 0;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_ENV: datadog_sdk_tracer_option = 1;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_VERSION: datadog_sdk_tracer_option = 2;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_AGENT_URL: datadog_sdk_tracer_option = 3;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_LIBRARY_VERSION: datadog_sdk_tracer_option =
    4;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_LIBRARY_LANGUAGE: datadog_sdk_tracer_option =
    5;
pub const datadog_sdk_tracer_option_DATADOG_TRACER_OPT_LIBRARY_LANGUAGE_VERSION:
    datadog_sdk_tracer_option = 6;
pub type datadog_sdk_tracer_option = ::std::os::raw::c_uint;
pub type datadog_sdk_conf_t = ::std::os::raw::c_void;
extern "C" {
    pub fn datadog_sdk_tracer_conf_new() -> *mut datadog_sdk_conf_t;
}
extern "C" {
    pub fn datadog_sdk_tracer_conf_free(handle: *mut datadog_sdk_conf_t);
}
extern "C" {
    pub fn datadog_sdk_tracer_conf_set(
        handle: *mut datadog_sdk_conf_t,
        option: datadog_sdk_tracer_option,
        value: *mut ::std::os::raw::c_void,
    );
}
pub type datadog_sdk_tracer_t = ::std::os::raw::c_void;
pub type datadog_sdk_span_t = ::std::os::raw::c_void;
extern "C" {
    pub fn datadog_sdk_tracer_new(
        conf_handle: *mut datadog_sdk_conf_t,
    ) -> *mut datadog_sdk_tracer_t;
}
extern "C" {
    pub fn datadog_sdk_tracer_free(tracer_handle: *mut datadog_sdk_tracer_t);
}
extern "C" {
    pub fn datadog_sdk_tracer_flush(tracer_handle: *mut datadog_sdk_tracer_t);
}
extern "C" {
    pub fn datadog_sdk_tracer_create_span(
        tracer_handle: *mut datadog_sdk_tracer_t,
        name: str_view,
    ) -> *mut datadog_sdk_span_t;
}
extern "C" {
    pub fn datadog_sdk_tracer_extract_or_create_span(
        tracer_handle: *mut datadog_sdk_tracer_t,
        reader_ctx: *mut ::std::os::raw::c_void,
        on_context_read: datadog_sdk_context_read_callback,
        name: str_view,
        resource: str_view,
    ) -> *mut datadog_sdk_span_t;
}
extern "C" {
    pub fn datadog_sdk_span_free(span_handle: *mut datadog_sdk_span_t);
}
extern "C" {
    pub fn datadog_sdk_span_set_tag(
        span_handle: *mut datadog_sdk_span_t,
        key: str_view,
        value: str_view,
    );
}
extern "C" {
    pub fn datadog_sdk_span_set_type(span_handle: *mut datadog_sdk_span_t, type_: str_view);
}
extern "C" {
    pub fn datadog_sdk_span_set_error(
        span_handle: *mut datadog_sdk_span_t,
        error_value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn datadog_sdk_span_set_error_message(
        span_handle: *mut datadog_sdk_span_t,
        error_message: str_view,
    );
}
extern "C" {
    pub fn datadog_sdk_span_inject(
        span_handle: *mut datadog_sdk_span_t,
        writer_ctx: *mut ::std::os::raw::c_void,
        on_context_write: datadog_sdk_context_write_callback,
    );
}
extern "C" {
    pub fn datadog_sdk_span_create_child(
        span_handle: *mut datadog_sdk_span_t,
        name: str_view,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn datadog_sdk_span_finish(span_handle: *mut datadog_sdk_span_t);
}
