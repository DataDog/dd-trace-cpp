version: "3.2"
services:

    # The Node.js proxy that sits in front of the C++ server.
    proxy:
        build:
            context: ./proxy
            dockerfile: ./Dockerfile
        ports:
            - "127.0.0.1:8000:80"
        environment:
            - DD_AGENT_HOST=datadog-agent
            - DD_SERVICE=dd-trace-cpp-http-server-example-proxy
        depends_on:
            - datadog-agent

    # The C++ HTTP server to which we added Datadog tracing
    server:
        image: datadog/docker-library:dd-trace-cpp-ci
        ports:
            - "127.0.0.1:8080:80"
        environment:
            - DD_AGENT_HOST=datadog-agent
            - DD_TRACE_DEBUG_TRACES=true
        volumes:
            - ../../:/mnt/repo
        command: "/bin/bash -c 'cd /mnt/repo && bin/cmake-build && cd .build && make install >/dev/null && ldconfig && c++ --std=c++17 -Wall -Wextra -pedantic -Werror -Og -o /tmp/server ../examples/http-server/server/server.cpp -ldd_trace_cpp && /tmp/server'"
        depends_on:
            - datadog-agent
        cap_add:
            - SYS_PTRACE
        security_opt:
            - seccomp:unconfined

    # A Python HTTP server that acts as a database backed by SQLite.
    # It also has Datadog tracing.
    database:
        build:
            context: ./database
            dockerfile: ./Dockerfile
        environment:
            - DD_AGENT_HOST=datadog-agent
            - DD_SERVICE=dd-trace-cpp-http-server-example-database
        stop_signal: SIGKILL
        depends_on:
            - datadog-agent

    # The Datadog trace agent
    datadog-agent:
        image: datadog/agent
        volumes:
            # - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - '/run/user/1000/docker.sock:/var/run/docker.sock:ro'
            - '/proc/:/host/proc/:ro'
            - '/sys/fs/cgroup/:/host/sys/fs/cgroup:ro'
        environment:
            - DD_API_KEY
            - DD_APM_ENABLED=true
            - DD_LOG_LEVEL=ERROR
